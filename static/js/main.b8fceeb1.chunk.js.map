{"version":3,"sources":["modules/localStorage.js","modules/csvFormater.js","components/shared/ResultZone.js","components/IndividualProgressPlan.js","components/shared/Logo.js","components/shared/Layout.js","components/shared/CsvDropzone.js","components/CsvDropzonePage.js","components/CsvGlobalSettings.js","components/Weekly.js","App.js","serviceWorker.js","index.js"],"names":["KEYS","setLocalStorage","key","value","localStorage","setItem","getLocalStorage","getItem","csvAsObject","csvAsText","papaparse","parse","header","transformHeader","toLowerCase","replace","data","csvAsKeys","csvData","length","Object","keys","extractUniqValueOfKey","compose","uniq","pluck","withStyles","theme","resultArea","whiteSpace","padding","marginTop","width","copyButton","float","resultWrapper","display","classes","result","className","Paper","text","IconButton","aria-label","useStyles","makeStyles","settingsGrid","input","row","marginBottom","alignItems","subTitle","fontWeight","IndividualProgressPlan","useState","csvKeys","setResult","users","setUsers","selectedUser","setSelectedUser","currentWeekKey","currentWeekValue","statusKey","split","shippedStatus","setShippedStatus","progressStatus","setProgressStatus","planStatus","setPlanStatus","lineStructure","setLineStructure","useEffect","currentWeekTask","filter","line","assign","buildLine","map","join","groupByStatus","currentStatus","groupBy","asString","includes","console","log","format","string","undefined","buildShipped","reduce","acc","status","buildProgress","buildPlan","teamMatesKey","flatten","extractTeamMates","Select","labelId","id","onChange","event","target","user","MenuItem","Grid","container","item","xs","md","multiple","logo","fontSize","color","palette","primary","light","logoSub","LogoStyled","styled","h1","white","typography","space","Logo","props","root","appBar","zIndex","drawer","flexDirection","justifyContent","content","flexGrow","spacing","toolbar","mixins","Layout","children","AppBar","Toolbar","mr","Button","component","Link","to","CssBaseline","height","dropZone","border","grey","borderRadius","bigDropZone","minHeight","title","CsvDropzone","big","history","useHistory","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","onerror","onload","push","readAsText","useDropzone","getRootProps","getInputProps","CsvDropzonePage","mt","mb","paperRoot","SeparatorText","margin","buttons","DISPLAY_KEYS","label","CsvGlobalSettings","stateKeys","setStateKeys","setCurrentWeekKey","currentWeekValues","setCurrentWeekValues","setCurrentWeekValue","small","updateKey","csvKey","variant","STATUS","textArea","rootPaper","textAlign","rootSelect","current_week","project","name","createMuiTheme","type","flexShrink","drawerPaper","App","ThemeProvider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b8fceeb1.chunk.js","sourcesContent":["const PREFIX = \"ng:\";\n\nexport const KEYS = {\n  status: \"key:status\",\n  title: \"key:title\",\n  teammates: \"key:teammates\",\n  categoryOne: \"key:category1\",\n  categoryTwo: \"key:category2\"\n};\n\nexport const setLocalStorage = (key, value) =>\n  localStorage.setItem(PREFIX + key, value);\nexport const getLocalStorage = key => localStorage.getItem(PREFIX + key);\n","import papaparse from \"papaparse\";\nimport { pluck, compose, split, map, flatten, uniq, replace } from \"ramda\";\nimport { getLocalStorage } from \"./localStorage\";\n\nexport const csvAsObject = () => {\n  const csvAsText = getLocalStorage(\"csvData\");\n  return (\n    (csvAsText &&\n      papaparse.parse(csvAsText, {\n        header: true,\n        transformHeader: header => header.toLowerCase().replace(\" \", \"_\")\n      }).data) ||\n    []\n  );\n};\n\nexport const csvAsKeys = () => {\n  const csvData = csvAsObject();\n  return (csvData && csvData.length > 0 && Object.keys(csvData[0])) || [];\n};\n\nexport const extractTeamMates = () => {\n  const csvData = csvAsObject();\n  const teamMatesKey = getLocalStorage(\"key:teammates\");\n  return (\n    (csvData &&\n      compose(\n        uniq(),\n        flatten(),\n        map(split(\",\")),\n        map(replace(/, /g, \",\")),\n        pluck(teamMatesKey)\n      )(csvData)) ||\n    []\n  );\n};\n\nexport const extractUniqValueOfKey = key => {\n  const csvData = csvAsObject();\n  return compose(uniq(), pluck(key))(csvData);\n};\n","import React from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { Paper } from \"@material-ui/core\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nconst styles = theme => ({\n  resultArea: {\n    whiteSpace: \"pre-wrap\",\n    padding: \"20px\",\n    marginTop: \"20px\",\n    width: \"100%\"\n  },\n  copyButton: {\n    float: \"right\"\n  },\n  resultWrapper: {\n    display: \"flex\",\n    width: \"100%\"\n  }\n});\n\nconst ResultZone = ({ classes, result }) => {\n  return (\n    result && (\n      <div className={classes.resultWrapper}>\n        <Paper className={classes.resultArea}>\n          <CopyToClipboard className={classes.copyButton} text={result}>\n            <IconButton aria-label=\"Copy\">\n              <FileCopyIcon />\n            </IconButton>\n          </CopyToClipboard>\n          {result}\n        </Paper>\n      </div>\n    )\n  );\n};\n\nexport default withStyles(styles)(ResultZone);\n","import React, { useState, useEffect } from \"react\";\nimport { groupBy, pluck, filter, compose, map } from \"ramda\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\n\nimport {\n  csvAsObject,\n  extractTeamMates,\n  extractUniqValueOfKey,\n  csvAsKeys\n} from \"../modules/csvFormater\";\nimport ResultZone from \"./shared/ResultZone\";\nimport { getLocalStorage, setLocalStorage } from \"../modules/localStorage\";\n\nconst useStyles = makeStyles(() => ({\n  settingsGrid: {\n    padding: \"20px\"\n  },\n  input: {\n    width: \"100%\"\n  },\n  row: {\n    marginBottom: \"20px\",\n    alignItems: \"center\"\n  },\n  subTitle: {\n    marginTop: \"40px\",\n    marginBottom: \"5px\",\n    \"& small\": {\n      fontWeight: \"300\"\n    }\n  }\n}));\n\nconst IndividualProgressPlan = () => {\n  const [csvData] = useState(csvAsObject());\n  const [csvKeys] = useState(csvAsKeys());\n  const [result, setResult] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  const currentWeekKey = getLocalStorage(\"key:currentWeek\");\n  const currentWeekValue = getLocalStorage(\"value:currentWeek\");\n  const statusKey = getLocalStorage(\"key:status\");\n  const [shippedStatus, setShippedStatus] = useState(\n    getLocalStorage(\"i3p:shippedStatus\")\n      ? getLocalStorage(\"i3p:shippedStatus\").split(\",\")\n      : []\n  );\n  const [progressStatus, setProgressStatus] = useState(\n    getLocalStorage(\"i3p:progressStatus\")\n      ? getLocalStorage(\"i3p:progressStatus\").split(\",\")\n      : []\n  );\n  const [planStatus, setPlanStatus] = useState(\n    getLocalStorage(\"i3p:planStatus\")\n      ? getLocalStorage(\"i3p:planStatus\").split(\",\")\n      : []\n  );\n\n  const [lineStructure, setLineStructure] = useState(\n    getLocalStorage(\"i3p:lineStructure\")\n      ? getLocalStorage(\"i3p:lineStructure\").split(\",\")\n      : []\n  );\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (csvData.length > 0) {\n      const currentWeekTask = filter(\n        line => line[currentWeekKey] === currentWeekValue && line.assign,\n        csvData\n      );\n\n      if (!selectedUser) {\n        const users = extractTeamMates(currentWeekTask);\n        setUsers(users);\n        setSelectedUser(users[0]);\n      } else {\n        const buildLine = line =>\n          `> - ${lineStructure.map(key => line[key]).join(\" / \")}`;\n\n        const groupByStatus = compose(\n          map(currentStatus => pluck(\"asString\", currentStatus).join(\"\\n\")),\n          groupBy(line => line[statusKey]),\n          map(line => {\n            return {\n              ...line,\n              asString: buildLine(line)\n            };\n          }),\n          filter(line => line.assign.includes(selectedUser))\n        )(currentWeekTask);\n        console.log(groupByStatus);\n        const format = string => (string !== undefined ? `${string}\\n` : \"\");\n\n        const buildShipped = shippedStatus.reduce((acc, status) => {\n          if (groupByStatus[status]) {\n            acc += format(groupByStatus[status]);\n          }\n          return acc;\n        }, \"\");\n\n        const buildProgress = progressStatus.reduce((acc, status) => {\n          if (groupByStatus[status]) {\n            acc += format(groupByStatus[status]);\n          }\n          return acc;\n        }, \"\");\n\n        const buildPlan = planStatus.reduce((acc, status) => {\n          if (groupByStatus[status]) {\n            acc += format(groupByStatus[status]);\n          }\n          return acc;\n        }, \"\");\n\n        setResult(\n          `:ship: *Shipped*\\n${buildShipped}\\n\\n:rocket: *Progress*\\n${buildProgress}\\n\\n:airplane: *Plan*\\n${buildPlan}\\n\\n:exploding_head: *Problem*\\n> - `\n        );\n      }\n    }\n  }, [\n    csvData,\n    currentWeekKey,\n    currentWeekValue,\n    lineStructure,\n    planStatus,\n    progressStatus,\n    result,\n    selectedUser,\n    shippedStatus,\n    statusKey\n  ]);\n\n  return (\n    <div>\n      {users.length > 0 && (\n        <Select\n          labelId=\"users\"\n          id=\"users\"\n          value={selectedUser}\n          onChange={event => setSelectedUser(event.target.value)}\n        >\n          {users.map(user => (\n            <MenuItem key={user.replace(\" \", \"_\").toLowerCase()} value={user}>\n              {user}\n            </MenuItem>\n          ))}\n        </Select>\n      )}\n      <Grid container>\n        <Grid item xs={12} md={7}>\n          <ResultZone result={result} />\n        </Grid>\n        <Grid className={classes.settingsGrid} item xs={12} md={5}>\n          <h3>Settings</h3>\n          <h4 className={classes.subTitle}>\n            Line structure <small>/!\\ Select key in order</small>\n          </h4>\n\n          {csvKeys.length > 0 && (\n            <Select\n              className={classes.input}\n              labelId=\"lineStructure\"\n              id=\"lineStructure\"\n              multiple\n              value={lineStructure}\n              onChange={event => {\n                setLineStructure(event.target.value);\n                setLocalStorage(\"i3p:lineStructure\", event.target.value);\n              }}\n            >\n              {csvKeys.map(value => (\n                <MenuItem key={value} value={value}>\n                  {value}\n                </MenuItem>\n              ))}\n            </Select>\n          )}\n          <span>Preview: {lineStructure.map(key => key).join(\" / \")}</span>\n          <h4 className={classes.subTitle}>\n            Layout <small>Select status to display</small>\n          </h4>\n          <Grid className={classes.row} container>\n            <Grid item xs={3}>\n              Shipped\n            </Grid>\n            <Grid item xs={9}>\n              {extractUniqValueOfKey(statusKey).length > 0 && (\n                <Select\n                  className={classes.input}\n                  labelId=\"shippedStatus\"\n                  id=\"shippedStatus\"\n                  multiple\n                  value={shippedStatus}\n                  onChange={event => {\n                    setShippedStatus(event.target.value);\n                    setLocalStorage(\"i3p:shippedStatus\", event.target.value);\n                  }}\n                >\n                  {extractUniqValueOfKey(statusKey).map(value => (\n                    <MenuItem key={value} value={value}>\n                      {value}\n                    </MenuItem>\n                  ))}\n                </Select>\n              )}\n            </Grid>\n          </Grid>\n          <Grid className={classes.row} container>\n            <Grid item xs={3}>\n              Progress\n            </Grid>\n            <Grid item xs={9}>\n              {extractUniqValueOfKey(statusKey).length > 0 && (\n                <Select\n                  className={classes.input}\n                  labelId=\"progressStatus\"\n                  id=\"progressStatus\"\n                  multiple\n                  value={progressStatus}\n                  onChange={event => {\n                    setProgressStatus(event.target.value);\n                    setLocalStorage(\"i3p:progressStatus\", event.target.value);\n                  }}\n                >\n                  {extractUniqValueOfKey(statusKey).map(value => (\n                    <MenuItem key={value} value={value}>\n                      {value}\n                    </MenuItem>\n                  ))}\n                </Select>\n              )}\n            </Grid>\n          </Grid>\n          <Grid className={classes.row} container>\n            <Grid item xs={3}>\n              Plan\n            </Grid>\n            <Grid item xs={9}>\n              {extractUniqValueOfKey(statusKey).length > 0 && (\n                <Select\n                  className={classes.input}\n                  labelId=\"planStatus\"\n                  id=\"planStatus\"\n                  multiple\n                  value={planStatus}\n                  onChange={event => {\n                    setPlanStatus(event.target.value);\n                    setLocalStorage(\"i3p:planStatus\", event.target.value);\n                  }}\n                >\n                  {extractUniqValueOfKey(statusKey).map(value => (\n                    <MenuItem key={value} value={value}>\n                      {value}\n                    </MenuItem>\n                  ))}\n                </Select>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default IndividualProgressPlan;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styled from \"styled-components\";\nimport { space, typography } from \"styled-system\";\n\nconst useStyles = makeStyles(theme => ({\n  logo: {\n    fontWeight: \"700\",\n    fontSize: \"50px\",\n    marginTop: \"50px\",\n    marginBottom: \"100px\",\n    color: theme.palette.primary.light\n  },\n  logoSub: {\n    fontWeight: \"300\"\n  }\n}));\n\nconst LogoStyled = styled.h1`\n    ${({ theme }) => `\n        color: ${theme.palette.primary.light};\n    `}\n    ${({ white }) =>\n      white &&\n      `\n        color: #fff;\n    `}\n    ${typography}\n    ${space}\n`;\n\nconst Logo = props => {\n  const classes = useStyles();\n\n  return (\n    <LogoStyled {...props}>\n      Notion <span className={classes.logoSub}>Generator</span>\n    </LogoStyled>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport Logo from \"./Logo\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    marginTop: \"70px\"\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar\n}));\n\nconst Layout = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <Logo fontSize={18} mr={20} white />\n          <Button component={Link} to=\"/individualprogressplan\">\n            individual 3P\n          </Button>\n          <Button component={Link} to=\"/weekly\">\n            weekly team\n          </Button>\n        </Toolbar>\n        <Toolbar>\n          <Button component={Link} to=\"/csvsettings\">\n            <SettingsIcon />\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <CssBaseline />\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Logo from \"./Logo\";\nimport { useHistory } from \"react-router-dom\";\nimport { setLocalStorage } from \"../../modules/localStorage\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  dropZone: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: `1px dashed ${theme.palette.grey[500]}`,\n    borderRadius: \"3px\",\n    padding: \"20px\",\n    width: \"50%\",\n    marginBottom: \"20px\"\n  },\n  bigDropZone: {\n    minHeight: \"300px\"\n  },\n  title: {\n    fontWeight: \"600\"\n  },\n  subTitle: {\n    fontWeight: \"300\"\n  }\n}));\n\nconst CsvDropzone = ({ big, children }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const onDrop = useCallback(\n    acceptedFiles => {\n      acceptedFiles.forEach(file => {\n        const reader = new FileReader();\n\n        reader.onabort = () => console.log(\"file reading was aborted\");\n        reader.onerror = () => console.log(\"file reading has failed\");\n        reader.onload = () => {\n          setLocalStorage(\"csvData\", reader.result);\n          history.push(\"/csvsettings\");\n        };\n        reader.readAsText(file);\n      });\n    },\n    [history]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  return (\n    <div\n      className={`${classes.dropZone} ${big && classes.bigDropZone}`}\n      {...getRootProps()}\n    >\n      <input {...getInputProps()} />\n      {children}\n\n      <span className={classes.title}>Drop your backlog here</span>\n      <span className={classes.subTitle}>only CSV supported</span>\n    </div>\n  );\n};\n\nexport default CsvDropzone;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Logo from \"./shared/Logo\";\nimport CsvDropzone from \"./shared/CsvDropzone\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  }\n}));\n\nconst CsvDropzonePage = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Logo mt={50} mb={100} fontSize={50} />\n      <CsvDropzone big />\n    </div>\n  );\n};\n\nexport default CsvDropzonePage;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Logo from \"./shared/Logo\";\nimport { Paper, Grid, Select, MenuItem, Button } from \"@material-ui/core\";\nimport { csvAsKeys, extractUniqValueOfKey } from \"../modules/csvFormater\";\nimport CsvDropzone from \"./shared/CsvDropzone\";\nimport {\n  setLocalStorage,\n  getLocalStorage,\n  KEYS\n} from \"../modules/localStorage\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  paperRoot: {\n    width: \"50%\",\n    padding: \"20px\",\n    marginBottom: \"30px\"\n  },\n  row: {\n    marginBottom: \"20px\",\n    alignItems: \"center\"\n  },\n  title: {\n    marginTop: \"0\"\n  },\n  SeparatorText: {\n    margin: \"0 10px\"\n  },\n  buttons: {\n    display: \"flex\",\n    width: \"50%\",\n    justifyContent: \"space-around\"\n  },\n  dropZone: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: `1px dashed ${theme.palette.grey[500]}`,\n    borderRadius: \"3px\",\n    padding: \"20px\",\n    width: \"50%\",\n    minHeight: \"40px\",\n    marginBottom: \"20px\"\n  }\n}));\n\nconst DISPLAY_KEYS = [\n  {\n    id: KEYS.status,\n    label: \"Status key\"\n  },\n  {\n    id: KEYS.title,\n    label: \"Title key\"\n  },\n  {\n    id: KEYS.teammates,\n    label: \"Team mates key\"\n  },\n  {\n    id: KEYS.categoryOne,\n    label: \"Category 1 key\"\n  },\n  {\n    id: KEYS.categoryTwo,\n    label: \"Category 2 key\"\n  }\n];\n\nconst CsvGlobalSettings = () => {\n  const classes = useStyles();\n\n  const [csvKeys] = useState(csvAsKeys());\n  const [stateKeys, setStateKeys] = useState({\n    [KEYS.status]: getLocalStorage(KEYS.status),\n    [KEYS.title]: getLocalStorage(KEYS.title),\n    [KEYS.teammates]: getLocalStorage(KEYS.teammates),\n    [KEYS.categoryOne]: getLocalStorage(KEYS.categoryOne),\n    [KEYS.categoryTwo]: getLocalStorage(KEYS.categoryTwo)\n  });\n  const [currentWeekKey, setCurrentWeekKey] = useState(\n    getLocalStorage(\"key:currentWeek\")\n  );\n  const [currentWeekValues, setCurrentWeekValues] = useState(\n    extractUniqValueOfKey(currentWeekKey)\n  );\n  const [currentWeekValue, setCurrentWeekValue] = useState(\n    getLocalStorage(\"value:currentWeek\")\n  );\n\n  const updateKey = (event, key) => {\n    setStateKeys({\n      ...stateKeys,\n      [key]: event.target.value\n    });\n    setLocalStorage(key, event.target.value);\n  };\n\n  const onSelectCurrentWeekKey = event => {\n    setCurrentWeekKey(event.target.value);\n    setCurrentWeekValues(extractUniqValueOfKey(event.target.value));\n    setLocalStorage(\"key:currentWeek\", event.target.value);\n  };\n  const onSelectCurrentWeekValue = event => {\n    setCurrentWeekValue(event.target.value);\n    setLocalStorage(\"value:currentWeek\", event.target.value);\n  };\n\n  console.log(currentWeekValue);\n\n  return (\n    <div className={classes.root}>\n      <Logo mt={50} mb={100} fontSize={50} />\n      <CsvDropzone classes={classes} small />\n      <Paper className={classes.paperRoot}>\n        <h2 className={classes.title}>Global settings</h2>\n        <Grid container>\n          {DISPLAY_KEYS.map(key => (\n            <Grid key={key.id} container className={classes.row}>\n              <Grid item xs={6}>\n                {key.label}\n              </Grid>\n              <Grid item xs={6}>\n                {csvKeys.length > 0 && (\n                  <Select\n                    labelId=\"keys\"\n                    id=\"keys\"\n                    value={stateKeys[key.id]}\n                    onChange={event => updateKey(event, key.id)}\n                  >\n                    {csvKeys.map(csvKey => (\n                      <MenuItem key={csvKey} value={csvKey}>\n                        {csvKey}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                )}\n              </Grid>\n            </Grid>\n          ))}\n\n          <Grid item xs={6}>\n            A task is current week if\n          </Grid>\n          <Grid item xs={6}>\n            {csvKeys.length > 0 && (\n              <Select\n                labelId=\"keys\"\n                id=\"keys\"\n                value={currentWeekKey}\n                onChange={onSelectCurrentWeekKey}\n              >\n                {csvKeys.map(csvKey => (\n                  <MenuItem key={csvKey} value={csvKey}>\n                    {csvKey}\n                  </MenuItem>\n                ))}\n              </Select>\n            )}\n            <span className={classes.SeparatorText}>equals</span>\n            {currentWeekValues.length > 0 && (\n              <Select\n                labelId=\"keys\"\n                id=\"keys\"\n                value={currentWeekValue}\n                onChange={onSelectCurrentWeekValue}\n              >\n                {currentWeekValues.map(key => (\n                  <MenuItem key={key} value={key}>\n                    {key}\n                  </MenuItem>\n                ))}\n              </Select>\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n      <div className={classes.buttons}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/individualprogressplan\"\n        >\n          individual 3P\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/weekly\"\n        >\n          weekly team\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default CsvGlobalSettings;\n","import React, { useState, useEffect } from \"react\";\nimport { groupBy, pluck, filter, compose, map } from \"ramda\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ResultZone from \"./shared/ResultZone\";\nimport { csvAsObject } from \"../modules/csvFormater\";\n\nconst styles = theme => ({\n  textArea: {\n    width: \"100%\",\n    marginTop: \"20px\"\n  },\n  rootPaper: {\n    height: \"100VH\",\n    padding: \"20px\",\n    textAlign: \"left\"\n  },\n  rootSelect: {\n    marginTop: \"30px\"\n  }\n});\n\nconst STATUS = {\n  TODO: \"To do\",\n  DOING: \"Doing\",\n  REVIEW: \"Review\",\n  WAITING: \"Waiting\",\n  DONE: \"Done\",\n  ARCHIVED: \"Archived\"\n};\n\nconst Weekly = ({ classes }) => {\n  const [csvData] = useState(csvAsObject());\n  const [result, setResult] = useState(null);\n\n  useEffect(() => {\n    if (csvData.length > 0) {\n      const currentWeekTask = filter(\n        line => line.current_week === \"Yes\",\n        csvData\n      );\n\n      const groupByStatus = compose(\n        map(currentStatus => pluck(\"asString\", currentStatus).join(\"\\n\")),\n        groupBy(line => line.project),\n        map(line => {\n          return {\n            ...line,\n            asString: `> - [${line.project}]${\n              line.status === STATUS.REVIEW || line.status === STATUS.WAITING\n                ? `[${line.status}]`\n                : \"\"\n            } ${line.name}`\n          };\n        })\n      )(currentWeekTask);\n\n      const format = string => (string !== undefined ? `${string}\\n` : \"\");\n\n      setResult(\n        `*Recap weekly*\\n${format(groupByStatus[STATUS.REVIEW])}${format(\n          groupByStatus[STATUS.DOING]\n        )}${format(groupByStatus[STATUS.WAITING])}${format(\n          groupByStatus[STATUS.TODO]\n        )}`\n      );\n    }\n  }, [csvData, result]);\n\n  return (\n    <div>\n      WIP\n      <ResultZone result={result} />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Weekly);\n","import React from \"react\";\nimport IndividualProgressPlan from \"./components/IndividualProgressPlan\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider as StyledThemeProvider } from \"styled-components\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Layout from \"./components/shared/Layout\";\nimport CsvDropzonePage from \"./components/CsvDropzonePage\";\nimport CsvGlobalSettings from \"./components/CsvGlobalSettings\";\nimport Weekly from \"./components/Weekly\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <StyledThemeProvider theme={theme}>\n          <div className={classes.root}>\n            <Switch>\n              <Route exact path=\"/\">\n                <CssBaseline />\n                <CsvDropzonePage />\n              </Route>\n              <Route path=\"/csvsettings\">\n                <CssBaseline />\n                <CsvGlobalSettings />\n              </Route>\n              <Route path=\"/individualprogressplan\">\n                <Layout appBar>\n                  <IndividualProgressPlan />\n                </Layout>\n              </Route>\n              <Route path=\"/weekly\">\n                <Layout appBar>\n                  <Weekly />\n                </Layout>\n              </Route>\n            </Switch>\n          </div>\n        </StyledThemeProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}